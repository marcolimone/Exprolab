<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="namespacemy__state__machine" kind="namespace" language="Python">
    <compoundname>my_state_machine</compoundname>
    <innerclass refid="classmy__state__machine_1_1_building__map" prot="public">my_state_machine::Building_map</innerclass>
    <innerclass refid="classmy__state__machine_1_1_controller" prot="public">my_state_machine::Controller</innerclass>
    <innerclass refid="classmy__state__machine_1_1_helper" prot="public">my_state_machine::Helper</innerclass>
    <innerclass refid="classmy__state__machine_1_1_planner" prot="public">my_state_machine::Planner</innerclass>
    <innerclass refid="classmy__state__machine_1_1_recharge" prot="public">my_state_machine::Recharge</innerclass>
    <innerclass refid="classmy__state__machine_1_1_wait" prot="public">my_state_machine::Wait</innerclass>
      <sectiondef kind="var">
      <memberdef kind="variable" id="namespacemy__state__machine_1a26dcebeb2ccae1a0b9ba8916249dd8f5" prot="public" static="no" mutable="no">
        <type>string</type>
        <definition>string my_state_machine.BATTERY_LOW</definition>
        <argsstring></argsstring>
        <name>BATTERY_LOW</name>
        <initializer>=  &apos;battery_low&apos;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="scripts/my_state_machine.py" line="38" column="1" bodyfile="scripts/my_state_machine.py" bodystart="38" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespacemy__state__machine_1a5d80a963edb811c55f8e6f6b8fb20a6d" prot="public" static="no" mutable="no">
        <type>string</type>
        <definition>string my_state_machine.END_MAP</definition>
        <argsstring></argsstring>
        <name>END_MAP</name>
        <initializer>=  &apos;endmap&apos;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="scripts/my_state_machine.py" line="39" column="1" bodyfile="scripts/my_state_machine.py" bodystart="39" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespacemy__state__machine_1adb1c248d196846cfc6ab61b1a12127c0" prot="public" static="no" mutable="no">
        <type>string</type>
        <definition>string my_state_machine.PLAN_OK</definition>
        <argsstring></argsstring>
        <name>PLAN_OK</name>
        <initializer>=  &apos;plan_ok&apos;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="scripts/my_state_machine.py" line="40" column="1" bodyfile="scripts/my_state_machine.py" bodystart="40" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespacemy__state__machine_1a8abba5b9214046cb279abf1b9366a757" prot="public" static="no" mutable="no">
        <type>string</type>
        <definition>string my_state_machine.ARRIVED</definition>
        <argsstring></argsstring>
        <name>ARRIVED</name>
        <initializer>=  &apos;arrived&apos;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="scripts/my_state_machine.py" line="41" column="1" bodyfile="scripts/my_state_machine.py" bodystart="41" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespacemy__state__machine_1a87d556df65d29ac4455cf1a561aa64a3" prot="public" static="no" mutable="no">
        <type>string</type>
        <definition>string my_state_machine.END_TIME</definition>
        <argsstring></argsstring>
        <name>END_TIME</name>
        <initializer>=  &apos;endtime&apos;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="scripts/my_state_machine.py" line="42" column="1" bodyfile="scripts/my_state_machine.py" bodystart="42" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespacemy__state__machine_1a2d87d1cbaa579d0f2658096c522c18f6" prot="public" static="no" mutable="no">
        <type>string</type>
        <definition>string my_state_machine.BATTERY_OK</definition>
        <argsstring></argsstring>
        <name>BATTERY_OK</name>
        <initializer>=  &apos;battery_ok&apos;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="scripts/my_state_machine.py" line="43" column="1" bodyfile="scripts/my_state_machine.py" bodystart="43" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="namespacemy__state__machine_1a46772979202eb2d3ed1bd5ed2064784f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>def</type>
        <definition>def my_state_machine.main</definition>
        <argsstring>()</argsstring>
        <name>main</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><verbatim>This function initialize and run the state machine with its state and its transitions
</verbatim> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="scripts/my_state_machine.py" line="280" column="1" bodyfile="scripts/my_state_machine.py" bodystart="280" bodyend="361"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para><verbatim>.. module::state_machine
   :platform: Unix
   :synopsis: Python module for the state machine
.. moduleauthor:: Marco Limone
 
This node run the state machine the execute function of each state describe what happened in each state 

Param:
 /battery_flag to know when the battery have to start to charge or discharge
 /controller_flag to activate and deactivate the controller

Subsciber to:

 /battery
 /create_map
 /planner
 /controller</verbatim> </para>
    </detaileddescription>
    <location file="scripts/my_state_machine.py" line="1" column="1"/>
  </compounddef>
</doxygen>
